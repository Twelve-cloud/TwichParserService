# dependencies
[tool.poetry]
name = "src"
version = "0.1.0"
description = "Parser for a Twich platform."
authors = ["Twelve <kana.suzucki@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]  # change
python = "3.10.*"
flake8 = "6.1.0"
black = "23.9.1"
isort = "5.12.0"
mypy = "1.5.1"
Flake8-pyproject = "1.2.3"

pydantic = "2.6.4"
pydantic-settings = "2.2.1"
fastapi = "0.104.1"
strawberry-graphql = {extras = ["fastapi"], version = "=0.219.2"}
uvicorn = "0.24.0"

pymongo = "4.6.1"
mongoengine = "0.27.0"
redis = "5.0.1"
types-redis = "4.6.0.11"
elasticsearch="7.10.1"
elasticsearch-dsl = "7.4.0"
kafka-python = "2.0.2"

dependency-injector = "4.41.0"
aiohttp =  "3.9.1"

pytest = "7.2.0"
pytest-cov = "4.0.0"
pytest-mock = "3.10.0"
httpx = "0.26.0"

py-automapper = "1.2.3"
fastapi-cache2 = "0.2.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# formatters
[tool.isort]
line_length = 100
lines_before_imports = 2
lines_after_imports = 2
multi_line_output = 3
force_grid_wrap = 2
lines_between_sections = 1
include_trailing_comma = true
use_parentheses = true
treat_all_comments_as_code = true
split_on_trailing_comma = true

[tool.black]
line-length = 100
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | data
)/
'''


# linters
[tool.flake8]
max-line-length = 100
max-complexity = 18
ignore = ['E203', 'E266', 'E704', 'W503', 'B905', 'B907']
select = ['B', 'C', 'E', 'F', 'W', 'T4', 'B9']
exclude = ['migrations', 'data', '.venv']

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
strict_optional = true
exclude = ['tests']
plugins = ['pydantic.mypy']

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


# tests
[tool.pytest.ini_options]
minversion = "7.2.0"
testpaths = "tests"
norecursedirs = ".venv .mypy_cache .pytest_cache data docs"
addopts = "-l -v -rsxX -p no:warnings --tb=short --strict-markers"
python_files = "test_* *_test tests_* *_tests unit* *unit func* *func"
python_classes = "*Test Test*"
python_functions = "test_*  *_test"

[tool.coverage.run]
branch = true
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*apps.py",
    "*settings*.py",
    "*urls.py",
    "*wsgi.py",
    "*asgi.py",
    "manage.py"
]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = ".coverage_report"
