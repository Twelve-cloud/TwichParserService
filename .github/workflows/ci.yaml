name: CI

on:
  push:
  pull_request:
    branches:
      - master
      - dev

jobs:
  cache:
    name: Cache dependencies for all jobs

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']

    runs-on: ['${{ matrix.os }}']

    steps:
      - name: clone github repository
        uses: actions/checkout@v4

      - name: install poetry
        run: pipx install poetry

      - name: install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
          cache: 'poetry'

      - name: install dependencies
        run: poetry install --no-ansi --no-interaction --no-root

  lint:
    name: Run linting and formatting checks

    needs: cache

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ['${{ matrix.os }}']

    steps:
      - name: clone github repository
        uses: actions/checkout@v4

      - name: install poetry
        run: pipx install poetry

      - name: install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: 'x64'
          cache: 'poetry'

      - name: run linters
        run: poetry run pre-commit run --all-files

    # deploy:
    #   name: Push docker image to docker hub

    #   needs: [lint]

    #   runs-on: [ubuntu-latest]

    #   steps:
    #     - name:
